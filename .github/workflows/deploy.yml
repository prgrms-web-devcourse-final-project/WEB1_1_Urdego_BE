name: Build and Deploy MSA
run-name: Running CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Java 17 설정
      - name: Install JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # 3. Docker 로그인
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_HUB_ACCESSKEY }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # 4. Docker 이미지 빌드 및 푸시
      - name: Build Discovery Service
        working-directory: ./discovery_service
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-service

      - name: Build Gateway Service
        working-directory: ./gateway_service
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service

      - name: Build User Service
        working-directory: ./user_service
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/user-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/user-service

      - name: Build Content Service
        working-directory: ./content_service
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/content-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/content-service

      - name: Build Group Service
        working-directory: ./group_service
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/group-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/group-service

      - name: Build Game Service
        working-directory: ./game_service
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/game-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/game-service

      - name: Build Notification Service
        working-directory: ./notification_service
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/notification-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/notification-service

      # 5. 서버에서 기존 docker-compose.yml로 컨테이너 재배포
      - name: Deploy Docker Containers
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > urdego-keypair.pem
          chmod 600 urdego-keypair.pem
          ssh -o StrictHostKeyChecking=no -i urdego-keypair.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/${{ secrets.EC2_USER }}
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/user-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/content-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/group-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/game-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/notification-service
            docker compose down
            docker compose up -d
          EOF
