name: Build and Deploy MSA
run-name: Running CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    services:
      redis:
        image: redis:7.4
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Java 17 설정
      - name: Install JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # 3. Docker 로그인
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_HUB_ACCESSKEY }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # 4. 각 서비스별 application.yml 생성 및 Docker 빌드/푸시
      - name: Generate application.yml for Discovery Service
        working-directory: ./discovery_service
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.DISCOVERY_SERVICE_APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Build Discovery Service with Gradle
        working-directory: ./discovery_service
        run: ./gradlew build

      - name: Build and Push Discovery Service
        working-directory: ./discovery_service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-service

      ####################################################################################################

      - name: Generate application.yml for Gateway Service
        working-directory: ./gateway_service
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.GATEWAY_SERVICE_APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Build Gateway Service with Gradle
        working-directory: ./gateway_service
        run: ./gradlew build

      - name: Build and Push Gateway Service
        working-directory: ./gateway_service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service

      ####################################################################################################

      - name: Generate application.yml for User Service
        working-directory: ./user_service
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.USER_SERVICE_APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Build User Service with Gradle
        working-directory: ./user_service
        run: ./gradlew build

      - name: Build and Push User Service
        working-directory: ./user_service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/user-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/user-service

      ####################################################################################################

      - name: Generate application.yml for Content Service
        working-directory: ./content_service
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.CONTENT_SERVICE_APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Build Content Service with Gradle
        working-directory: ./content_service
        run: ./gradlew build

      - name: Build and Push Content Service
        working-directory: ./content_service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/content-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/content-service

      ####################################################################################################

      - name: Generate application.yml for Group Service
        working-directory: ./group_service
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.GROUP_SERVICE_APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Build Group Service with Gradle
        working-directory: ./group_service
        run: ./gradlew build

      - name: Build and Push Group Service
        working-directory: ./group_service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/group-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/group-service

      ####################################################################################################

      - name: Generate application.yml for Game Service
        working-directory: ./game_service
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.GAME_SERVICE_APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Build Game Service with Gradle
        working-directory: ./game_service
        run: ./gradlew build

      - name: Build and Push Game Service
        working-directory: ./game_service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/game-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/game-service          

      ####################################################################################################

      - name: Generate application.yml for Notification Service
        working-directory: ./notification_service
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.NOTIFICATION_SERVICE_APPLICATION_YML }}" > ./src/main/resources/application.yml
          sed -i 's/host: 3\.39\.135\.47/host: redis/' ./src/main/resources/application.yml
          sed -i 's/defaultZone: http:\/\/3\.39\.135\.47:8761\/eureka/defaultZone: http:\/\/localhost:8761\/eureka/' ./src/main/resources/application.yml


      - name: Build Notification Service with Gradle
        working-directory: ./notification_service
        run: |
          chmod +x ./gradlew
          ./gradlew build

      - name: Build and Push Notification Service
        working-directory: ./notification_service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/notification-service .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/notification-service          

      # 5. Docker 컨테이너 배포 (EC2 또는 서버)
      - name: Upload docker-compose.yml to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > urdego-keypair.pem
          chmod 600 urdego-keypair.pem
          scp -o StrictHostKeyChecking=no -i urdego-keypair.pem docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/

      - name: Deploy Docker Containers
        run: |
          ssh -o StrictHostKeyChecking=no -i urdego-keypair.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/${{ secrets.EC2_USER }}
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/user-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/content-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/group-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/notification-service
            docker compose down
            docker compose up -d
          EOF